name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg-cache
  VCPKG_ROOT: C:\vcpkg

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      run: |
        mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        cd $env:VCPKG_INSTALLATION_ROOT
        ./bootstrap-vcpkg.bat
        ./vcpkg --version > ${{ github.workspace }}/vcpkg-version.txt

    - name: Cache vcpkg
      uses: actions/cache@v4
      id: vcpkg-cache
      env:
        cache-name: vcpkg-cache
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('main/**/vcpkg.json', 'vcpkg-version.txt') }}

    - name: Configure CMake
      run: |
        cmake --preset vs2022-windows -Wno-deprecated
        cmake --preset vs2022-windows-vr -Wno-deprecated

    - name: Build
      run: |
        cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel
        cmake --build ${{ github.workspace }}/buildVR --config ${{ env.BUILD_TYPE }} --parallel

    - name: Install
      run: |
        cmake --install ${{ github.workspace }}/build --component "fomod" --config ${{ env.BUILD_TYPE }} --prefix ${{ github.workspace }}/build-fomod
        cmake --install ${{ github.workspace }}/build --component "SKSEPlugin" --config ${{ env.BUILD_TYPE }} --prefix ${{ github.workspace }}/build-fomod/Core/SkyrimSE
        cmake --install ${{ github.workspace }}/buildVR --component "SKSEPlugin" --config ${{ env.BUILD_TYPE }} --prefix ${{ github.workspace }}/build-fomod/Core/SkyrimVR

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}
        path: ${{ github.workspace }}/build-fomod

